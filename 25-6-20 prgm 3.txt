3. write a c program to implement Multiple stack operations using SLL.
#include<stdio.h>
#include<conio.h>
#define MAX_X 5
#define MAX_Y 5
int topx=-1;
int topy=10;
void push_x(int *stack)
{
int info;

if(topx>=(MAX_X-1))
{ printf(" Stack OverFlow");
return;
}
else
{ printf(" Enter The info To Push");
scanf("%d",&info);
topx++;
stack[topx]=info;
}}
void push_y(int *stack)
{
int info;

if(topy<=(MAX_Y))
{
printf(" Stack OverFlow");
return;
}
else
{
printf(" Enter The info To Push");
scanf("%d",&info);
topy--;
stack[topy]=info;
}
}
void pop_x(int *stack)
{ if(topx==-1)
{
printf("Stack X is Underflow");
return;
}
else
{
  printf("Item Poped from stack X is:%d ",stack[topx]);

  topx--;
}
}
void pop_y(int *stack)
{ if(topy==10)
{printf("Stack y is Underflow");
return;
}
else
{ printf("Item Poped from stack Y is:%d ",stack[topy]);
  topy++;
}}
void display_x(int *stack)
{
int i;
if(topx==-1)
{
printf("Stack X is Empty");
return;
}
else
{ for(i=topx;i>=0;i--)
   {printf("%d,",stack[i]);}
   printf(" ");
}}
void display_y(int *stack)
{
int i;
if(topy==10)
{printf("Stack Y is Empty");
return;}
else
{for(i=topy;i<=9;i++)
   {
printf("%d,",stack[i]);
   }
   printf(" ");
} }
main()
{ int choice;
char ch;
int stack[MAX_X+MAX_Y];
do
{   printf("1.Push_X 2.Push_Y ");
printf(" 3.Pop_X 4.Pop_Y ");
printf(" 5.Display_X 6.Display_Y ");
printf(" 7.Exit");
printf(" Enter Choice");
scanf("%d",&choice);
switch(choice)
{
case 1: push_x(stack);break;
case 2: push_y(stack);break;

case 3: pop_x(stack);break;
case 4: pop_y(stack);break;

case 5: display_x(stack);break;
case 6: display_y(stack);break;
case 7: break;
default: printf("Wrong Option...");
}
}while(choice!=7);
}